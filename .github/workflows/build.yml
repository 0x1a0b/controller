name: Build Environment

on: [push, pull_request]

env:
  PIPENV_ACTIVE: 1

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest]
    
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies (Linux)
      if: matrix.os == ubuntu-latest
      run: |
        sudo apt-get update
        sudo apt-get install -y software-properties-common
        sudo add-apt-repository universe -y
        sudo add-apt-repository ppa:team-gcc-arm-embedded/ppa -y
        sudo apt-get update
        sudo apt-get install dfu-util tree exuberant-ctags gcc-arm-embedded ninja-build
    - name: Install dependencies (macOS)
      if: matrix.os == macOS-latest
      run: |
        brew update
        brew install tree ctags dfu-util binutils gnu-sed
        brew tap armmbed/formulae
        brew install armmbed/formulae/arm-none-eabi-gcc
    - name: Install kll compiler
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install kll
        pip install -r requirements.txt
    - name: Keyboard Tests
      working-directory: Keyboards
      run: |
        # Input Club Keyboards
        ./ic_keyboards.bash
        # Input Club Keyboards - Host-Side Builds
        EnableHostOnlyBuild=true HostTest=kll.py ./ic_keyboards.bash
    - name: Misc Keyboard Tests
      working-directory: Keyboard/Others
      run: ./others.bash
    - name: Debug Build Tests
      working-directory: Keyboards/Testing
      run: ./all_tests.bash
    - name: Bootloader Build Tests
      working-directory: Bootloader/Builds
      run: ./all.bash
    - name: Dockerfile Tests
      working-directory: Dockerfiles
      run: ./all.bash
